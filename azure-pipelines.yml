# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

pool:
  name: Azure Pipelines
  vmImage: 'macOS-latest'
  demands: xcode

 
steps:
- task: CmdLine@2
  inputs:
    script: |
             java -version
# - task: NodeTool@0
#   displayName: 'Use Node 14.x'
#   inputs:
#     versionSpec: 14.19.3

# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: '$(Certificatesp12)'
#     certPwd: 'Cartus01'
#     keychain: 'temp'
    
# - task: InstallAppleProvisioningProfile@1
#   inputs:
#    provisioningProfileLocation: 'secureFiles'
#    provProfileSecureFile: '$(provisioningProfile)'
#    removeProfile: true

# - task: CmdLine@2
#   inputs:
#     script: |
    
#       npm install -g npm
#       echo step1
#       npm install titanium -g
#       echo step2
#       npm install alloy -g
#       npm install -g git://github.com/appcelerator/titanium.git
#       echo step3
#       ti sdk install
#       ti sdk select 10.1.1.GA
#       echo step 5
#       ti build -p ios -b

# - task: Xcode@5
#   inputs:
#    actions: 'build'
#    scheme: 'CartusMobileDev'
#    sdk: 'iphoneos'
#    configuration: 'Release'
#    xcWorkspacePath: '**/{{projectName}}.xcworkspace'
#    xcodeVersion: 'default'
#    packageApp: true
#    signingOption: 'manual'
#    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'

# - task: CopyFiles@2
#   inputs:
#     Contents: '**/*.ipa'
#     targetFolder: 'drop/$(Configuration)_ios'
#     overWrite: true


# - task: DownloadSecureFile@1
#   inputs: 
#     secureFile: 'CartusKeystore.jks'

# - task: Gradle@2
#   inputs:
#      gradleWrapperFile: 'gradlew'
#      tasks: ':app:bundleRelease'
#      publishJUnitResults: false
#      javaHomeOption: 'JDKVersion'
#      sonarQubeRunAnalysis: false
#      spotBugsAnalysis: false

# - task: CmdLine@2
#   displayName: 'Signing and aligning AAB file(s) app\build\outputs\bundle\release\app-release.aab'
#   inputs:
#         script: 'jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $(KeyStoreFile.secureFilePath) -storepass $(StorePassword) -keypass $(KeyPassword) $(system.defaultworkingdirectory)/app/build/outputs/bundle/release/app-release.aab $(KeyStoreAlias)'


# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(system.defaultworkingdirectory)/app/build/outputs/bundle/release/'
#     Contents: '**'
#     TargetFolder: '$(build.artifactstagingdirectory)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
